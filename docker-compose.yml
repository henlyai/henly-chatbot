# Do not edit this file directly. Use a ‘docker-compose.override.yaml’ file if you can.
# Refer to `docker-compose.override.yaml.example’ for some sample configurations.

services:
  api:
    container_name: LibreChat
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    working_dir: /workspaces
    volumes:
      - .:/workspaces
      - type: bind
        source: ./.env
        target: /workspaces/.env
      - ./images:/workspaces/client/public/images
      - ./client/dist:/workspaces/client/dist:ro
      - ./key.pem:/key.pem:ro
      - ./cert.pem:/cert.pem:ro
    environment:
      - HOST=0.0.0.0
      - PORT=3080
    ports:
      - "${PORT}:${PORT}"
      - "3080:3080"
    depends_on:
      - mongodb
      - rag_api
    restart: always
    user: "${UID}:${GID}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: sh -c "npm install && npm run build:data-provider && npm run build:data-schemas && npm run build:api && npm run backend"
  mongodb:
    container_name: chat-mongodb
    image: mongo
    restart: always
    user: "${UID}:${GID}"
    volumes:
      - ./data-node:/data/db
    command: mongod --noauth
  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.12.3
    restart: always
    user: "${UID}:${GID}"
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    volumes:
      - ./meili_data_v1.12:/meili_data
  vectordb:
    container_name: vectordb
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    restart: always
    volumes:
      - pgdata2:/var/lib/postgresql/data
  rag_api:
    container_name: rag_api
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    environment:
      - DB_HOST=vectordb
      - RAG_PORT=${RAG_PORT:-8000}
    restart: always
    depends_on:
      - vectordb
    env_file:
      - .env

volumes:
  pgdata2:
