# Railway-optimized Dockerfile for LibreChat
FROM node:18-alpine

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    curl

# Copy package files first for better caching
COPY package*.json ./
COPY client/package*.json ./client/
COPY api/package*.json ./api/

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY . .

# Build the application
RUN npm run build:data-provider
RUN npm run build:data-schemas
RUN npm run build:api

# Create a startup script that waits for dependencies
RUN echo '#!/bin/sh\n\
echo "Starting LibreChat..."\n\
echo "Waiting for dependencies to be ready..."\n\
sleep 10\n\
echo "Starting backend..."\n\
npm run backend\n\
' > /start.sh

RUN chmod +x /start.sh

# Expose port
EXPOSE 3080

# Health check with longer timeout and retries
HEALTHCHECK --interval=30s --timeout=30s --start-period=120s --retries=5 \
    CMD curl -f http://localhost:3080/api/health || exit 1

# Start the application
CMD ["/start.sh"] 